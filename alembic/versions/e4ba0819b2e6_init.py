"""Init

Revision ID: e4ba0819b2e6
Revises: 
Create Date: 2023-10-10 01:14:19.789980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e4ba0819b2e6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predmets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('predmet_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('predmet_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['predmet_id'], ['predmets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students_m2m_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('students', sa.Integer(), nullable=True),
    sa.Column('groups', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groups'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['students'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers_m2m_predmets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teachers', sa.Integer(), nullable=True),
    sa.Column('predmets', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['predmets'], ['predmets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teachers'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades_m2m_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('students', sa.Integer(), nullable=True),
    sa.Column('grades', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grades'], ['grades.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['students'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('grades_m2m_students')
    op.drop_table('teachers_m2m_predmets')
    op.drop_table('students_m2m_groups')
    op.drop_table('grades')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_table('predmets')
    op.drop_table('groups')
    # ### end Alembic commands ###
